#include <iostream>

/*
	함수의 주소를 매개변수로 넘겨주는 것을 함수 포인터라고 합니다.
	함수 포인터는 함수를 호출하는 것이 아니라 함수의 주소를 다른 함수에 전달하여,
	해당 함수를 필요한 시점에 호출할 수 있습니다.
	이러한 기능은 다음과 같은 경우에 유용하게 사용됩니다.

	1. 콜백 함수
		- 콜백 함수는 다른 함수의 인자로 전달되어,
		  해당 함수에서 필요한 시점에 호출되는 함수입니다.
		  이때 콜백 함수는 함수 포인터로 전달됩니다.
		  예를 들어, 버튼을 클릭할 때 호출되는 함수에서,
		  버튼 클릭 이벤트가 발생할 때 실행되는 콜백 함수를 전달할 수 있습니다.
	
	2. 함수 포인터를 이용한 다형성
		- 함수 포인터를 사용하면, 같은 형태의 함수를 가진 여러 함수들을 호출할 때,
		  함수 포인터를 통해 각 함수를 호출할 수 있습니다. 이러한 기능을 이용하여,
		  다형성을 구현할 수 있습니다.

	3. 동적 라이브러리
		- 동적 라이브러리를 사용할 때, 라이브러리 내부에 있는
		  함수를 호출하기 위해 함수 포인터를 사용합니다.
		  이때 함수 포인터를 사용하면, 런타임에 해당 함수를 호출할 수 있습니다.

	4. 함수 포인터를 이용한 캡슐화
		- C++에서 함수 포인터를 이용하여, 객체의 메서드를 호출할 수 있습니다.
		  이러한 기능을 이용하여, 객체의 메서드를 함수 포인터로 캡슐화 할 수 있습니다.
*/




int func(int);

int main() {
	// 함수를 지시하는 포인터
	// 어떠한 함수에 함수의 주소를 매개변수로 넘겨주는 경우 유용하게 사용할 수 있다.
	/*
		1. 함수의 주소를 얻는다.
		2. 함수를 지시하는 포인터를 선언한다.
		3. 함수를 지시하는 포인터를 사용하여 그 함수를 호출한다.
	*/

	std::cout << func << std::endl;

	int (*pf)(int);
	pf = func;

	int (*pf2)(int) = func;

	std::cout << (*pf)(3) << std::endl;

	return 0;
}

int func(int n) {

	return n + 1;
}

